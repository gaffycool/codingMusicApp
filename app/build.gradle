plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.hh.codingexcersise"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    
    implementation "com.google.android.material:material:$material"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Kotlin Flow
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Support Libraries
    implementation "androidx.appcompat:appcompat:$supportVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.cardview:cardview:$cardViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.github.mrmike:ok2curl:$curlVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

    // Lifecycle (ViewModel + LiveData)
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataKtx"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Coil
    implementation "io.coil-kt:coil:$coilVersion"

    // Hilt + Dagger
    implementation "com.google.dagger:hilt-android:$hiltAndroidVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltAndroidVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltViewModelVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltViewModelVersion"

    // KTX
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    // Testing
    testImplementation "junit:junit:$jUnitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidjUnitVersion"
    androidTestImplementation("androidx.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    // Debug
    implementation "com.jakewharton.timber:timber:$timberVersion"

}